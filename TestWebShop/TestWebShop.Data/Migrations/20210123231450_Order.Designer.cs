// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWebShop.Data.DbContext;

namespace TestWebShop.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210123231450_Order")]
    partial class Order
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TestWebShop.Data.Entities.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Articul")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Articul");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Currency");

                    b.Property<string>("GoodTypeCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("GoodTypeCode");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("ProducerCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ProducerCode");

                    b.Property<double>("Value")
                        .HasColumnType("float")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("GoodTypeCode");

                    b.HasIndex("ProducerCode");

                    b.ToTable("good");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.GoodType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Code");

                    b.ToTable("goodtype");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.Order", b =>
                {
                    b.Property<string>("OrderGuid")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("OrderGuid");

                    b.Property<int>("GoodId")
                        .HasColumnType("int")
                        .HasColumnName("GoodId");

                    b.Property<int>("GoodCount")
                        .HasColumnType("int")
                        .HasColumnName("GoodCount");

                    b.Property<double>("GoodPrice")
                        .HasColumnType("float")
                        .HasColumnName("GoodPrice");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate");

                    b.HasKey("OrderGuid", "GoodId");

                    b.HasIndex("GoodId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.Producer", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Code");

                    b.ToTable("producer");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.Good", b =>
                {
                    b.HasOne("TestWebShop.Data.Entities.GoodType", "GoodTypes")
                        .WithMany("Goods")
                        .HasForeignKey("GoodTypeCode");

                    b.HasOne("TestWebShop.Data.Entities.Producer", "Producers")
                        .WithMany("Goods")
                        .HasForeignKey("ProducerCode");

                    b.Navigation("GoodTypes");

                    b.Navigation("Producers");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.Order", b =>
                {
                    b.HasOne("TestWebShop.Data.Entities.Good", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.GoodType", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("TestWebShop.Data.Entities.Producer", b =>
                {
                    b.Navigation("Goods");
                });
#pragma warning restore 612, 618
        }
    }
}
